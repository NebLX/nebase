
include(FeatureSummary)

set(WITH_DEBUG_LOG_DESC "Build with debug info")
option(WITH_DEBUG_LOG ${WITH_DEBUG_LOG_DESC} OFF)
add_feature_info(WITH_DEBUG_LOG WITH_DEBUG_LOG ${WITH_DEBUG_LOG_DESC})

set(WITH_HARDEN_FLAGS_DESC "Build with security hardening flags")
option(WITH_HARDEN_FLAGS ${WITH_HARDEN_FLAGS_DESC} ON)
add_feature_info(WITH_HARDEN_FLAGS WITH_HARDEN_FLAGS ${WITH_HARDEN_FLAGS_DESC})

set(WITH_CLANG_TIDY_DESC "Do static analysis with clang-tidy")
option(WITH_CLANG_TIDY ${WITH_CLANG_TIDY_DESC} OFF)
add_feature_info(WITH_CLANG_TIDY WITH_CLANG_TIDY ${WITH_CLANG_TIDY_DESC})
if(WITH_CLANG_TIDY)
  find_program(CLANG_TIDY_EXE NAMES "clang-tidy" DOC "Path to clang-tidy exectuable")
  if(NOT CLANG_TIDY_EXE)
    message(STATUS "clang-tidy not found, disabling integration")
    set(WITH_CLANG_TIDY OFF)
  else()
    message(STATUS "Found clang-tidy: ${CLANG_TIDY_EXE}")
  endif()
  if(CMAKE_VERSION VERSION_LESS "3.6")
    message(SEND_ERROR "CMake >= 3.6 is required to use clang-tidy integration")
  endif()
endif(WITH_CLANG_TIDY)

set(WITH_CPPCHECK_DESC "Do static analysis with cppcheck")
option(WITH_CPPCHECK ${WITH_CPPCHECK_DESC} OFF)
add_feature_info(WITH_CPPCHECK WITH_CPPCHECK ${WITH_CPPCHECK_DESC})
if(WITH_CPPCHECK)
  find_program(CPPCHECK_EXE NAMES "cppcheck" DOC "Path to cppcheck exectuable")
  if(NOT CPPCHECK_EXE)
    message(STATUS "cppcheck not found, disabling integration")
    set(WITH_CPPCHECK OFF)
  else()
    message(STATUS "Found cppcheck: ${CPPCHECK_EXE}")
  endif()
  if(CMAKE_VERSION VERSION_LESS "3.10")
    message(SEND_ERROR "CMake >= 3.10 is required to use cppcheck integration")
  endif()
endif(WITH_CPPCHECK)

set(COMPAT_CODE_COVERAGE_DESC "Build with code coverage test compile options")
option(COMPAT_CODE_COVERAGE ${COMPAT_CODE_COVERAGE_DESC} OFF)
add_feature_info(COMPAT_CODE_COVERAGE COMPAT_CODE_COVERAGE ${COMPAT_CODE_COVERAGE_DESC})
